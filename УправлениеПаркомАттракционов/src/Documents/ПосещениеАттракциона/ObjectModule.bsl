
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ,Режим)
	
	// Записываем пустые движения
	Движения.АктивныеПосещения.Записывать = Истина;
	Движения.Записать();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	АктивныеПосещенияОстатки.ВидАттракциона КАК ВидАттракциона,
		|	АктивныеПосещенияОстатки.КоличествоПосещенийОстаток КАК КоличествоПосещенийОстаток
		|ИЗ
		|	РегистрНакопления.АктивныеПосещения.Остатки(, Основание = &Основание) 
		|	КАК АктивныеПосещенияОстатки";
	
	Запрос.УстановитьПараметр("Основание", Основание);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ОсталосьПосещений = 0;
	ВидАттракционаАбонемента = Неопределено;
	
	Если Выборка.Следующий() Тогда
		ВидАттракционаАбонемента = Выборка.ВидАттракциона;
		ОсталосьПосещений = Выборка.КоличествоПосещенийОстаток;
	КонецЕсли;;
	
	// Проверка  количества посещений по билету
	Если ОсталосьПосещений < 1 Тогда
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "В билете не осталось посещений";
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Поле = "Основание";
		Сообщение.Сообщить();
	КонецЕсли;
	
	// проверка соответствия посещаемого аттракциона с у казанным видом аттракциона в билете
	ВидАттракционаВДокументе = ВидАттракциона(Аттракцион);
	
	Если ЗначениеЗаполнено(ВидАттракционаАбонемента) И ВидАттракционаВДокументе <> ВидАттракционаАбонемента Тогда
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "Билет не подходит этому аттракциону";
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Поле = "Основание";
		Сообщение.Сообщить();		
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	// регистр АктивныеПосещения
	Движения.АктивныеПосещения.Записывать = Истина;
	Движение = Движения.АктивныеПосещения.Добавить();
	Движение.Период = Дата;
	Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
	Движение.ВидАттракциона = ВидАттракционаАбонемента;
	Движение.Основание = Основание;
	Движение.КоличествоПосещений = 1;

	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ВидАттракциона(Аттракцион)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Аттракционы.ВидАттракциона
		|ИЗ
		|	Справочник.Аттракционы КАК Аттракционы";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Выборка.Следующий();
	
	Результат = Выборка.ВидАттракциона;
	
	Возврат Результат;	
	
КонецФункции

#КонецОбласти

#Область Инициализация

#КонецОбласти

#КонецЕсли
