
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
		
	// Проверка наличия строк
	Если Диапазоны.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	// 1. Нижняя граница первого диапазона равна 0
	Если Диапазоны[0].НижняяГраница <> 0 Тогда
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = СтрШаблон("Нижняя граница первого диапазона должна быть равна 0");
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Поле = "Диапазоны[0].НижняяГраница";
		Сообщение.Сообщить();
	КонецЕсли;
	
	// Введем значение
	ВерхняяГраницаПредыдущегоДиапазона = 0;
	
	// Обход всех строк таблицы для проверки значений диапазонов
	Для Сч = 0 По Диапазоны.Количество() - 1 Цикл		
		// получаем конкретный диапазон по индексу
		Диапазон = Диапазоны[Сч];
		Если Сч > 0 Тогда
		// 2. Верхняя граница диапазона, кроме последнего, равна Нижней границе следующего диапазона
			Если Диапазон.НижняяГраница <> ВерхняяГраницаПредыдущегоДиапазона Тогда
				Отказ = Истина;
				Сообщение = Новый СообщениеПользователю();
				Сообщение.Текст = СтрШаблон("Верхняя граница диапазона должна быть равна нижней следующего");
				Сообщение.УстановитьДанные(ЭтотОбъект);
				Сообщение.Поле = СтрШаблон("Диапазоны[1%].НижняяГраница", XMLСтрока(Сч));
				Сообщение.Сообщить();
			КонецЕсли;
		КонецЕсли;
				
		// 3. Верхняя граница всегда больше нижней, кроме последнего
		Если Диапазон.НижняяГраница > Диапазон.ВерхняяГраница 
			И Сч <> Диапазоны.Количество() - 1 Тогда
				
			Отказ = Истина;
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = СтрШаблон("Верхняя граница диапазона должна быть больше нижней");
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Поле = СтрШаблон("Диапазоны[1%].ВерхняяГраница", XMLСтрока(Сч));
			Сообщение.Сообщить();
		КонецЕсли; 
		
		ВерхняяГраницаПредыдущегоДиапазона = Диапазон.ВерхняяГраница;
	КонецЦикла;
	
	// 4. Верхняя граница последнего диапазона равна 0
	ПоследнийДиапазон = Диапазоны[Диапазоны.Количество() - 1];	
	
	Если ПоследнийДиапазон.ВерхняяГраница <> 0 Тогда
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = СтрШаблон("Верхняя граница последнего диапазона должна быть равна 0");
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Поле = СтрШаблон("Диапазоны[1%].ВерхняяГраница", XMLСтрока(Диапазоны.Количество()-1));
		Сообщение.Сообщить();
	КонецЕсли;	
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ,Режим)
	
	// регистр АктуальнаяШкалаБонуснойПрограммы
	Движения.АктуальнаяШкалаБонуснойПрограммы.Записывать = Истина;
	Движение = Движения.АктуальнаяШкалаБонуснойПрограммы.Добавить();
	Движение.Период = Дата;
	Движение.Шкала = Ссылка;

КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Код процедур и функций

#КонецОбласти

#Область Инициализация

#КонецОбласти

#КонецЕсли
